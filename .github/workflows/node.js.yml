name: Node.js CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "17"
      - run: npx lerna bootstrap
      - run: npx lerna run lint
      - run: npx lerna run typescript
      - run: npm run test
      - run: npx lerna run build
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: packages
          path: |
            packages/**/dist

  pre_release:
    runs-on: ubuntu-latest

    needs: build

    if: ${{ github.event_name == 'push' }}

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "17"
          registry-url: "https://registry.npmjs.org"
      - run: npx lerna bootstrap
      - run: npx lerna run build
      - run: npx lerna version "$(node -e "console.log(require('./lerna.json').version)")-pre.${{ github.run_number }}" --no-git-tag-version --yes
      - run: git config user.email "info@openmrs.org" && git config user.name "OpenMRS CI"
      - run: git add . && git commit -m "Prerelease version" --no-verify
      - run: npm run ci:prepublish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

  release:
    runs-on: ubuntu-latest

    needs: build

    if: ${{ github.event_name == 'release' }}

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "17"
          registry-url: "https://registry.npmjs.org"
      - run: npx lerna bootstrap
      - run: npx lerna run build
      - run: npm run ci:publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
